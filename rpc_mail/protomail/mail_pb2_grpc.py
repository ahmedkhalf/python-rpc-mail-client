# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mail_pb2 as mail__pb2


class MailStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConnectClient = channel.unary_unary(
                '/protomail.Mail/ConnectClient',
                request_serializer=mail__pb2.ConnectRequest.SerializeToString,
                response_deserializer=mail__pb2.ConnectResponce.FromString,
                )
        self.LoginClient = channel.unary_unary(
                '/protomail.Mail/LoginClient',
                request_serializer=mail__pb2.LoginRequest.SerializeToString,
                response_deserializer=mail__pb2.Empty.FromString,
                )
        self.LogoutClient = channel.unary_unary(
                '/protomail.Mail/LogoutClient',
                request_serializer=mail__pb2.LogoutRequest.SerializeToString,
                response_deserializer=mail__pb2.Empty.FromString,
                )
        self.DeleteClient = channel.unary_unary(
                '/protomail.Mail/DeleteClient',
                request_serializer=mail__pb2.DeleteRequest.SerializeToString,
                response_deserializer=mail__pb2.Empty.FromString,
                )
        self.ListMailboxes = channel.unary_stream(
                '/protomail.Mail/ListMailboxes',
                request_serializer=mail__pb2.ListMailboxesRequest.SerializeToString,
                response_deserializer=mail__pb2.ListMailboxesResponce.FromString,
                )
        self.SelectMailbox = channel.unary_unary(
                '/protomail.Mail/SelectMailbox',
                request_serializer=mail__pb2.SelectMailboxRequest.SerializeToString,
                response_deserializer=mail__pb2.Empty.FromString,
                )


class MailServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConnectClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogoutClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMailboxes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectMailbox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MailServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConnectClient': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectClient,
                    request_deserializer=mail__pb2.ConnectRequest.FromString,
                    response_serializer=mail__pb2.ConnectResponce.SerializeToString,
            ),
            'LoginClient': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginClient,
                    request_deserializer=mail__pb2.LoginRequest.FromString,
                    response_serializer=mail__pb2.Empty.SerializeToString,
            ),
            'LogoutClient': grpc.unary_unary_rpc_method_handler(
                    servicer.LogoutClient,
                    request_deserializer=mail__pb2.LogoutRequest.FromString,
                    response_serializer=mail__pb2.Empty.SerializeToString,
            ),
            'DeleteClient': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClient,
                    request_deserializer=mail__pb2.DeleteRequest.FromString,
                    response_serializer=mail__pb2.Empty.SerializeToString,
            ),
            'ListMailboxes': grpc.unary_stream_rpc_method_handler(
                    servicer.ListMailboxes,
                    request_deserializer=mail__pb2.ListMailboxesRequest.FromString,
                    response_serializer=mail__pb2.ListMailboxesResponce.SerializeToString,
            ),
            'SelectMailbox': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectMailbox,
                    request_deserializer=mail__pb2.SelectMailboxRequest.FromString,
                    response_serializer=mail__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protomail.Mail', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mail(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConnectClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protomail.Mail/ConnectClient',
            mail__pb2.ConnectRequest.SerializeToString,
            mail__pb2.ConnectResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoginClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protomail.Mail/LoginClient',
            mail__pb2.LoginRequest.SerializeToString,
            mail__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogoutClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protomail.Mail/LogoutClient',
            mail__pb2.LogoutRequest.SerializeToString,
            mail__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protomail.Mail/DeleteClient',
            mail__pb2.DeleteRequest.SerializeToString,
            mail__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMailboxes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protomail.Mail/ListMailboxes',
            mail__pb2.ListMailboxesRequest.SerializeToString,
            mail__pb2.ListMailboxesResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SelectMailbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protomail.Mail/SelectMailbox',
            mail__pb2.SelectMailboxRequest.SerializeToString,
            mail__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
